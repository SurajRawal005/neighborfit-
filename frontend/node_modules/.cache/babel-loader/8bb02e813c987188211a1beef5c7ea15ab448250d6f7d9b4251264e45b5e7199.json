{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naren dhami\\\\OneDrive\\\\Desktop\\\\neighborfit\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIFESTYLE_OPTIONS = [\"Urban\", \"Walkable\", \"Nightlife\", \"Family-friendly\", \"Quiet\", \"Parks\", \"Nature\", \"Trails\", \"Relaxed\", \"Modern\", \"Young Professionals\", \"Cafes\", \"Historic\", \"Arts\"];\nfunction App() {\n  _s();\n  const [neighborhoods, setNeighborhoods] = useState([]);\n  const [selectedPrefs, setSelectedPrefs] = useState([]);\n  useEffect(() => {\n    fetchNeighborhoods();\n    // eslint-disable-next-line\n  }, []);\n  const fetchNeighborhoods = (prefs = []) => {\n    let url = \"http://localhost:5000/api/neighborhoods\";\n    if (prefs.length > 0) {\n      url += `?preferences=${prefs.join(\",\")}`;\n    }\n    fetch(url).then(res => res.json()).then(data => setNeighborhoods(data));\n  };\n  const handlePrefChange = e => {\n    const value = e.target.value;\n    setSelectedPrefs(prev => prev.includes(value) ? prev.filter(p => p !== value) : [...prev, value]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchNeighborhoods(selectedPrefs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NeighborFit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find a neighborhood that fits your lifestyle!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"prefs-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prefs-options\",\n        children: LIFESTYLE_OPTIONS.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"prefs-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: opt,\n            checked: selectedPrefs.includes(opt),\n            onChange: handlePrefChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), opt]\n        }, opt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Find Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Neighborhoods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: neighborhoods.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No matches found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : neighborhoods.map(n => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: n.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), \" (\", n.lifestyle, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 56\n        }, this), \"Avg Rent: \\u20B9\", n.avgRent, \" | Schools: \", n.schools, \" | Walk Score: \", n.walkScore, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 88\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          children: [\"Match Score: \", n.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nu4ZHo8PvW6qioouDLAHaFEIVXY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LIFESTYLE_OPTIONS","App","_s","neighborhoods","setNeighborhoods","selectedPrefs","setSelectedPrefs","fetchNeighborhoods","prefs","url","length","join","fetch","then","res","json","data","handlePrefChange","e","value","target","prev","includes","filter","p","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","opt","type","checked","onChange","n","name","lifestyle","avgRent","schools","walkScore","score","id","_c","$RefreshReg$"],"sources":["C:/Users/naren dhami/OneDrive/Desktop/neighborfit/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst LIFESTYLE_OPTIONS = [\r\n  \"Urban\",\r\n  \"Walkable\",\r\n  \"Nightlife\",\r\n  \"Family-friendly\",\r\n  \"Quiet\",\r\n  \"Parks\",\r\n  \"Nature\",\r\n  \"Trails\",\r\n  \"Relaxed\",\r\n  \"Modern\",\r\n  \"Young Professionals\",\r\n  \"Cafes\",\r\n  \"Historic\",\r\n  \"Arts\"\r\n];\r\n\r\nfunction App() {\r\n  const [neighborhoods, setNeighborhoods] = useState([]);\r\n  const [selectedPrefs, setSelectedPrefs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchNeighborhoods();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchNeighborhoods = (prefs = []) => {\r\n    let url = \"http://localhost:5000/api/neighborhoods\";\r\n    if (prefs.length > 0) {\r\n      url += `?preferences=${prefs.join(\",\")}`;\r\n    }\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setNeighborhoods(data));\r\n  };\r\n\r\n  const handlePrefChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedPrefs(prev =>\r\n      prev.includes(value)\r\n        ? prev.filter(p => p !== value)\r\n        : [...prev, value]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchNeighborhoods(selectedPrefs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>NeighborFit</h1>\r\n      <p>Find a neighborhood that fits your lifestyle!</p>\r\n      <form onSubmit={handleSubmit} className=\"prefs-form\">\r\n        <div className=\"prefs-options\">\r\n          {LIFESTYLE_OPTIONS.map(opt => (\r\n            <label key={opt} className=\"prefs-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={opt}\r\n                checked={selectedPrefs.includes(opt)}\r\n                onChange={handlePrefChange}\r\n              />\r\n              {opt}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Find Matches</button>\r\n      </form>\r\n      <h2>Neighborhoods</h2>\r\n      <ul>\r\n        {neighborhoods.length === 0 ? (\r\n          <li>No matches found.</li>\r\n        ) : (\r\n          neighborhoods.map(n => (\r\n            <li key={n.id}>\r\n              <strong>{n.name}</strong> ({n.lifestyle})<br/>\r\n              Avg Rent: â‚¹{n.avgRent} | Schools: {n.schools} | Walk Score: {n.walkScore}<br/>\r\n              <span className=\"score\">Match Score: {n.score}</span>\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}